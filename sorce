local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
    Name = "üî• Example Script Hub | Game üî´",
    LoadingTitle = "üî´ Gun Simulator üí•",
    LoadingSubtitle = "by 1_F0",
    ConfigurationSaving = {
        Enabled = false,
        FolderName = nil,
        FileName = "Example Hub"
    },
    Discord = {
        Enabled = false,
        Invite = "noinvitelink",
        RememberJoins = true
    },
    KeySystem = true,
    KeySettings = {
        Title = "Key | Youtube Hub",
        Subtitle = "Key System",
        Note = "Key In Discord Server",
        FileName = "YoutubeHubKey1",
        SaveKey = false,
        GrabKeyFromSite = true,
        Key = {"https://pastebin.com/raw/AtgzSPWK"}
    }
})

local MainTab = Window:CreateTab("üè† Home", nil)
local MainSection = MainTab:CreateSection("Main")

-- Infinite Jump Toggle
local Button = MainTab:CreateButton({
    Name = "Infinite Jump Toggle",
    Callback = function()
        _G.infinjump = not _G.infinjump
        if _G.infinJumpStarted == nil then
            _G.infinJumpStarted = true
            game.StarterGui:SetCore("SendNotification", {
                Title = "Youtube Hub",
                Text = "Infinite Jump Activated!",
                Duration = 5
            })
            local plr = game:GetService('Players').LocalPlayer
            local m = plr:GetMouse()
            m.KeyDown:connect(function(k)
                if _G.infinjump and k:byte() == 32 then
                    local humanoid = plr.Character:FindFirstChildOfClass('Humanoid')
                    if humanoid then
                        humanoid:ChangeState('Jumping')
                        wait()
                        humanoid:ChangeState('Seated')
                    end
                end
            end)
        end
    end
})

-- WalkSpeed Slider
local SliderWS = MainTab:CreateSlider({
    Name = "WalkSpeed Slider",
    Range = {1, 350},
    Increment = 1,
    Suffix = "Speed",
    CurrentValue = 16,
    Flag = "sliderws",
    Callback = function(Value)
        local humanoid = game.Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid')
        if humanoid then
            humanoid.WalkSpeed = Value
        end
    end
})

-- JumpPower Slider
local SliderJP = MainTab:CreateSlider({
    Name = "JumpPower Slider",
    Range = {1, 350},
    Increment = 1,
    Suffix = "Power",
    CurrentValue = 50,
    Flag = "sliderjp",
    Callback = function(Value)
        local humanoid = game.Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid')
        if humanoid then
            humanoid.JumpPower = Value
        end
    end
})

-- Noclip Toggle
local NoclipToggle = MainTab:CreateToggle({
    Name = "Noclip",
    CurrentValue = false,
    Flag = "noclip",
    Callback = function(Value)
        _G.noclip = Value
        local plr = game.Players.LocalPlayer
        local char = plr.Character
        if char then
            local hrp = char:FindFirstChild("HumanoidRootPart")
            if hrp then
                hrp.CanCollide = not Value
                for _, v in pairs(char:GetChildren()) do
                    if v:IsA("BasePart") then
                        v.CanCollide = not Value
                    end
                end
            end
        end
    end
})

-- Fly Toggle
local FlyToggle = MainTab:CreateToggle({
    Name = "Fly",
    CurrentValue = false,
    Flag = "fly",
    Callback = function(Value)
        _G.fly = Value
        local plr = game.Players.LocalPlayer
        local char = plr.Character
        if char then
            local hrp = char:FindFirstChild("HumanoidRootPart")
            if hrp then
                if Value then
                    local bodyVelocity = Instance.new("BodyVelocity", hrp)
                    bodyVelocity.Velocity = Vector3.new(0, 0, 0)
                    bodyVelocity.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
                    _G.flyBV = bodyVelocity
                else
                    if _G.flyBV then
                        _G.flyBV:Destroy()
                    end
                end
            end
        end
    end
})

-- Speed Input
local SpeedInput = MainTab:CreateInput({
    Name = "Speed",
    PlaceholderText = "1-500",
    RemoveTextAfterFocusLost = true,
    Callback = function(Text)
        local speed = tonumber(Text)
        if speed then
            local humanoid = game.Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid')
            if humanoid then
                humanoid.WalkSpeed = speed
            end
        else
            print("Invalid input for Speed")
        end
    end
})

-- Weapon Modification (example: change fire rate)
local WeaponSection = MainTab:CreateSection("Weapon Mods")
local FireRateSlider = WeaponSection:CreateSlider({
    Name = "Fire Rate Slider",
    Range = {0.1, 10},
    Increment = 0.1,
    Suffix = "Rate",
    CurrentValue = 1,
    Flag = "firerate",
    Callback = function(Value)
        -- Example: Adjust fire rate of the weapon
        -- Make sure to replace 'YourWeapon' with the actual weapon object
        local weapon = game.Players.LocalPlayer.Character:FindFirstChild("YourWeapon")
        if weapon then
            weapon.FireRate = Value
        end
    end
})

-- KillAll Button
local KillAllButton = MainTab:CreateButton({
    Name = "Kill All Players",
    Callback = function()
        for _, player in pairs(game.Players:GetPlayers()) do
            if player ~= game.Players.LocalPlayer then
                local char = player.Character
                if char then
                    local humanoid = char:FindFirstChildOfClass("Humanoid")
                    if humanoid then
                        humanoid.Health = 0
                    end
                end
            end
        end
    end
})

local TPTab = Window:CreateTab("üèù Teleports", nil)
-- Implement teleport buttons as needed

local MiscTab = Window:CreateTab("üé≤ Misc", nil)
-- Add additional functionalities here
